name: Test CI/CD Pipeline

on:
  push:
    branches:
      - "feature/*"
      - "bugfix/*"
      - "dev"
      - "staging"
  pull_request:
    branches:
      - "dev"
      - "staging"
    paths-ignore:
      - "*.md"

jobs:
  # Job 1: Feature/Bugfix to Dev
  feature-bugfix-to-dev:
    if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/bugfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Testing Step - Run some simple echo command to verify functionality
      - name: Run Tests on Dev
        run: |
          echo "Running tests on dev..."
      # Deployment Step - You can replace this with actual deployment steps
      - name: Deploy to Dev
        run: |
          echo "Deploying to dev..."
      # Create a Pull Request to Dev (Only for bugfix/* branch)
      - name: Create Pull Request to Dev (for bugfix/* only)
        if: success() && startsWith(github.ref, 'refs/heads/bugfix/')
        run: |
          echo "Creating pull request from bugfix/* to dev..."
          curl -X POST \
            -H "Authorization: token ${{ secrets.MY_DEV_001 }}" \
            -d '{"title":"Merge bugfix changes to dev","head":"${{ github.ref }}","base":"dev"}' \
            https://api.github.com/repos/${{ github.repository }}/pulls
      # Create Pull Request for feature/* to dev
      - name: Create Pull Request to Dev (for feature/* only)
        if: success() && startsWith(github.ref, 'refs/heads/feature/')
        run: |
          echo "Creating pull request from feature/* to dev..."
          curl -X POST \
            -H "Authorization: token ${{ secrets.MY_DEV_001 }}" \
            -d '{"title":"Merge feature changes to dev","head":"${{ github.ref }}","base":"dev"}' \
            https://api.github.com/repos/${{ github.repository }}/pulls
      # Notify Success
      - name: Notify Success
        if: success()
        run: echo "Feature/Bugfix changes passed tests and are now on dev."

  # Job 2: Push to Staging after Dev
  dev-to-staging:
    if: github.ref == 'refs/heads/dev' && success()
    runs-on: ubuntu-latest
    needs: feature-bugfix-to-dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Testing before Staging deployment
      - name: Run Tests on Dev before Staging
        run: |
          echo "Running tests on dev before deploying to staging..."
      # Deployment Step - Replace with actual deployment commands
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging..."
      # Create a Pull Request from dev to staging (if needed)
      - name: Create Pull Request from Dev to Staging
        if: success()
        run: |
          echo "Creating pull request from dev to staging..."
          curl -X POST \
            -H "Authorization: token ${{ secrets.MY_DEV_001 }}" \
            -d '{"title":"Merge dev changes to staging","head":"dev","base":"staging"}' \
            https://api.github.com/repos/${{ github.repository }}/pulls
      # Notify Success
      - name: Notify Success
        if: success()
        run: echo "Changes deployed to staging."

  # Job 3: PR to Dev and Staging 
  # Job 4: Hotfix directly to Main
  hotfix-to-main:
    if: startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests on Hotfix
        run: |
          echo "Running tests on hotfix..."
      - name: Deploy to Staging
        run: |
          echo "Deploying hotfix to staging..."
      - name: Deploy to Main
        run: |
          echo "Deploying hotfix to main..."
      - name: Notify Success
        if: success()
        run: echo "Hotfix deployed to main successfully."
