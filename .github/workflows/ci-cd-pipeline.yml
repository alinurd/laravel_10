name: CI/CD Pipeline

on:
  push:
    branches:
      - "feature/*"
      - "bugfix/*"
      - "dev"
      - "staging"
  pull_request:
    branches:
      - "dev"
      - "staging"
    paths-ignore:
      - "*.md"

jobs:
  # Job 1: Feature/Bugfix to Dev
  feature-bugfix-to-dev:
    if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/bugfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Tests on Dev
        run: |
          echo "Running tests on dev..."
          # Perintah untuk menjalankan tes Anda
      - name: Deploy to Dev
        run: |
          echo "Deploying to dev..."
          # Perintah untuk deploy ke dev
      - name: Create Pull Request to Dev (for bugfix/* only)
        if: success() && startsWith(github.ref, 'refs/heads/bugfix/')
       - name: Create Pull Request to Dev (for bugfix/* only)
  if: success() && startsWith(github.ref, 'refs/heads/bugfix/')
  run: |
    echo "Creating pull request from bugfix/* to dev..."
    curl -X POST \
      -H "Authorization: token ${{ secrets.MY_DEV_001 }}" \
      -d '{"title":"Merge bugfix changes to dev","head":"${{ github.ref }}","base":"dev"}' \
      https://api.github.com/repos/${{ github.repository }}/pulls

      - name: Notify Success
        if: success()
        run: echo "Feature/Bugfix changes passed tests and are now on dev."

  # Job 2: Push to Staging after Dev
  dev-to-staging:
    if: github.ref == 'refs/heads/dev' && success()
    runs-on: ubuntu-latest
    needs: feature-bugfix-to-dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Tests on Dev before Staging
        run: |
          echo "Running tests on dev before deploying to staging..."
          # Tes tambahan jika perlu
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging..."
          # Perintah untuk deploy ke staging
      - name: Notify Success
        if: success()
        run: echo "Changes deployed to staging."

  # Job 3: PR to Dev and Staging
  pr-to-dev-staging:
    if: github.event_name == 'pull_request' && (startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'bugfix/'))
    runs-on: ubuntu-latest
    steps:
      - name: Print GitHub Context
        run: echo "Event Name: ${{ github.event_name }}; Head Ref: ${{ github.head_ref }}"
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Tests on PR
        run: |
          echo "Running tests before merging to dev or staging..."
          # Jalankan tes sebelum PR diterima
      - name: Notify Success
        if: success()
        run: echo "PR is ready to merge into dev or staging."

  # Job 4: Hotfix directly to Main
  hotfix-to-main:
    if: startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Tests on Hotfix
        run: |
          echo "Running tests on hotfix..."
          # Tes untuk hotfix
      - name: Deploy to Staging
        run: |
          echo "Deploying hotfix to staging..."
          # Deploy ke staging
      - name: Deploy to Main
        run: |
          echo "Deploying hotfix to main..."
          # Deploy ke main
      - name: Notify Success
        if: success()
        run: echo "Hotfix deployed to main successfully."

  # Job 5: Manual Merge to Main (when necessary)
  manual-merge-to-main:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Merge Staging to Main
        run: |
          echo "Merging staging to main..."
          git checkout main
          git merge staging
          git push origin main
      - name: Notify Success
        run: echo "Manual merge from staging to main completed."
